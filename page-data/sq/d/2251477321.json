{"data":{"allGithubData":{"nodes":[{"data":{"search":{"nodes":[{"description":"Callable services to encode and decode Base64 with samples to call from COBOL, PL/I and C","name":"base64","url":"https://github.com/cicsdev/base64"},{"description":"Blog - Java™ batch (JSR-352) in CICS®, concepts and tutorial","name":"blog-cics-java-batch","url":"https://github.com/cicsdev/blog-cics-java-batch"},{"description":"Blog - Using Java™ transactions in CICS® Liberty to coordinate JDBC updates","name":"blog-cics-java-jta-jdbc","url":"https://github.com/cicsdev/blog-cics-java-jta-jdbc"},{"description":"Blog - EJBs in Liberty JVM server - a Web Shop example","name":"blog-cics-java-liberty-ejb","url":"https://github.com/cicsdev/blog-cics-java-liberty-ejb"},{"description":"Blog - using MQ JMS in a CICS® OSGi JVM server","name":"blog-cics-java-mq-jms-osgi","url":"https://github.com/cicsdev/blog-cics-java-mq-jms-osgi"},{"description":"Blog - OSGi demystified: don't bungle your bundles","name":"blog-cics-java-osgi-best-practices","url":"https://github.com/cicsdev/blog-cics-java-osgi-best-practices"},{"description":"Blog - OSGi demystified: dynamic class loading","name":"blog-cics-java-osgi-classloading","url":"https://github.com/cicsdev/blog-cics-java-osgi-classloading"},{"description":"A basic example of CICS® channel usage with the Asynchronous API, coded in assembler","name":"cics-async-api-channel-usage-example","url":"https://github.com/cicsdev/cics-async-api-channel-usage-example"},{"description":"An example application that compares calling services sequentially versus asynchronously, using the new CICS® asynchronous API","name":"cics-async-api-credit-card-application-example","url":"https://github.com/cicsdev/cics-async-api-credit-card-application-example"},{"description":"A basic example demonstrating the passing of information from a parent to a child program using the CICS® asynchronous API","name":"cics-async-api-fetch-child-example","url":"https://github.com/cicsdev/cics-async-api-fetch-child-example"},{"description":"Companion example code for the CICS® Asynchronous API Redbooks publication","name":"cics-async-api-redbooks","url":"https://github.com/cicsdev/cics-async-api-redbooks"},{"description":"CICS® Asynchronous API example to demonstrate how to use the EXEC CICS FETCH commands with optional parameters TIMEOUT, and NOSUSPEND","name":"cics-async-fetch-variation-example","url":"https://github.com/cicsdev/cics-async-fetch-variation-example"},{"description":"This repository contains files to support blogs hosted elsewhere. Each blog has its own subdirectory for associated files","name":"cics-blog-sample-files","url":"https://github.com/cicsdev/cics-blog-sample-files"},{"description":"Sample scripts to create, validate, and deploy CICS® bundles","name":"cics-bundle-scripts","url":"https://github.com/cicsdev/cics-bundle-scripts"},{"description":"CICSPlex® SM Workload Manager trace flag switcher","name":"cics-cpsm-wlm-trace","url":"https://github.com/cicsdev/cics-cpsm-wlm-trace"},{"description":"Java™ EE 7 web application that consumes events produced by CICS® TS event processing","name":"cics-event-consumer","url":"https://github.com/cicsdev/cics-event-consumer"},{"description":"Sample Java™ web application to demonstrate how to emit and consume CICS® events in Java™ using the JCICS API","name":"cics-eventprocessing-java","url":"https://github.com/cicsdev/cics-eventprocessing-java"},{"description":"Sample library for z/OS® demonstrates how 64-bit LE applications on z/OS can use the external CICS® interface (EXCI) to call CICS","name":"cics-exci-64bit-connector","url":"https://github.com/cicsdev/cics-exci-64bit-connector"},{"description":"Sample program to help ensure that only approved and tested versions of CICS® Explorer can be used to access a given CICS region","name":"cics-explorer-access-level-policing","url":"https://github.com/cicsdev/cics-explorer-access-level-policing"},{"description":"Sample General Insurance Application (GenApp) for CICS® TS","name":"cics-genapp","url":"https://github.com/cicsdev/cics-genapp"},{"description":"Sample program to disable outbound IPIC heartbeats in a CICS® region","name":"cics-ipic-heartbeat-disabler","url":"https://github.com/cicsdev/cics-ipic-heartbeat-disabler"},{"description":"A simple Java™ batch sample with a batchlet to get CICS® task number","name":"cics-java-batch","url":"https://github.com/cicsdev/cics-java-batch"},{"description":"CICS® Java™ program illustrating usage of a J2C generated data binding to map a COMMAREA ","name":"cics-java-j2cprog","url":"https://github.com/cicsdev/cics-java-j2cprog"},{"description":"CICS® Java™ applications demonstrating how to use the most common commands in the JCICS API","name":"cics-java-jcics-samples","url":"https://github.com/cicsdev/cics-java-jcics-samples"},{"description":"Samples to show different scenarios of how you might use the JCICSX API","name":"cics-java-jcicsx-samples","url":"https://github.com/cicsdev/cics-java-jcicsx-samples"},{"description":"Sample automation process based on system policy rule to resume a Liberty JVM server HTTP endpoint","name":"cics-java-liberty-app-deployment","url":"https://github.com/cicsdev/cics-java-liberty-app-deployment"},{"description":"RESTful web application state browser for Liberty using the WebSphere JMX Mbeans","name":"cics-java-liberty-appstate","url":"https://github.com/cicsdev/cics-java-liberty-appstate"},{"description":"Sample EJB Java™ EE application providing a simple web shop for deployment to CICS® Liberty","name":"cics-java-liberty-ejb","url":"https://github.com/cicsdev/cics-java-liberty-ejb"},{"description":"Sample web application that uses JDBC to read and update the sample Db2 EMP table.","name":"cics-java-liberty-employee-db","url":"https://github.com/cicsdev/cics-java-liberty-employee-db"},{"description":"Liberty user feature providing a global handler implementation to audit incoming JAXWS web services in a Liberty JVM server ","name":"cics-java-liberty-globalhandler","url":"https://github.com/cicsdev/cics-java-liberty-globalhandler"},{"description":"Sample Java™ Authentication Service Provider Interface for Containers (JASPIC) for use with CICS® Liberty to validate JSON web tokens (JWTs)","name":"cics-java-liberty-jaspic-jwt","url":"https://github.com/cicsdev/cics-java-liberty-jaspic-jwt"},{"description":"RESTful service for CICS® TSQ access using Liberty and JAX-RS with the IBMRestServlet","name":"cics-java-liberty-jaxrs","url":"https://github.com/cicsdev/cics-java-liberty-jaxrs"},{"description":"JAX-WS web service sample to wrapper an existing CICS® program","name":"cics-java-liberty-jaxws","url":"https://github.com/cicsdev/cics-java-liberty-jaxws"},{"description":"CICS® Liberty JDBC sample web application","name":"cics-java-liberty-jdbc","url":"https://github.com/cicsdev/cics-java-liberty-jdbc"},{"description":"Sample CICS® Java™ program showing use of the CICSProgram annotation for Link to Liberty","name":"cics-java-liberty-link","url":"https://github.com/cicsdev/cics-java-liberty-link"},{"description":"Sample materials for the article \"Using the Liberty JWT Feature with CICS®\" that illustrate how CICS and Liberty for z/OS capabilities can be used to handle JSON Web Token (JWT)","name":"cics-java-liberty-loans-and-scoring","url":"https://github.com/cicsdev/cics-java-liberty-loans-and-scoring"},{"description":"Sample Java EE web application demonstrating how to use a JMS Connection Factory and an MDB in CICS® Liberty ","name":"cics-java-liberty-mq-jms","url":"https://github.com/cicsdev/cics-java-liberty-mq-jms"},{"description":"Sample JAX-RS RESTful web application for Liberty that links to a CICS® COBOL program ","name":"cics-java-liberty-restapp","url":"https://github.com/cicsdev/cics-java-liberty-restapp"},{"description":"Sample RESTful web application providing several code examples for using JCICS in Liberty JVM server","name":"cics-java-liberty-restapp-ext","url":"https://github.com/cicsdev/cics-java-liberty-restapp-ext"},{"description":"Sample Java™ application demonstrating use of Spring Boot asynchronous threading in CICS® Liberty","name":"cics-java-liberty-springboot-asynchronous","url":"https://github.com/cicsdev/cics-java-liberty-springboot-asynchronous"},{"description":"Java™ Spring Boot application that uses the JCICS TSQ Java API to provide a RESTful CICS® TSQ browsing service","name":"cics-java-liberty-springboot-jcics","url":"https://github.com/cicsdev/cics-java-liberty-springboot-jcics"},{"description":"Java™ Spring Boot application demonstrating how to use the Spring Boot JdbcTemplate in CICS® Liberty","name":"cics-java-liberty-springboot-jdbc","url":"https://github.com/cicsdev/cics-java-liberty-springboot-jdbc"},{"description":"Java™ application demonstrating how to use the Spring Boot JdbcTemplate with multiple DataSources","name":"cics-java-liberty-springboot-jdbc-multi","url":"https://github.com/cicsdev/cics-java-liberty-springboot-jdbc-multi"},{"description":"Java™ Spring Boot application to demonstrate how to use the Spring Boot JmsTemplate to integrate with CICS® using IBM® MQ as the JMS provider","name":"cics-java-liberty-springboot-jms","url":"https://github.com/cicsdev/cics-java-liberty-springboot-jms"},{"description":"Java™ Spring Boot application that uses Spring Data JPA and is ready to be deployed into CICS® Liberty","name":"cics-java-liberty-springboot-jpa","url":"https://github.com/cicsdev/cics-java-liberty-springboot-jpa"},{"description":"Sample application that demonstrates how to use Link to Liberty to link to a Spring Boot Java™ application","name":"cics-java-liberty-springboot-link","url":"https://github.com/cicsdev/cics-java-liberty-springboot-link"},{"description":"Java™ Spring Boot application that integrates with CICS® security ","name":"cics-java-liberty-springboot-security","url":"https://github.com/cicsdev/cics-java-liberty-springboot-security"},{"description":"Java™ application demonstrating how to create a transactional Spring Boot application for use in CICS® Liberty","name":"cics-java-liberty-springboot-transactions","url":"https://github.com/cicsdev/cics-java-liberty-springboot-transactions"},{"description":"CICS® Liberty SQLJ sample web application","name":"cics-java-liberty-sqlj","url":"https://github.com/cicsdev/cics-java-liberty-sqlj"},{"description":"Sample Trust Association Interceptor for use with Liberty to validate JSON web tokens","name":"cics-java-liberty-tai-jwt","url":"https://github.com/cicsdev/cics-java-liberty-tai-jwt"},{"description":"Demonstration of OSGi Declarative Services (DS) in a CICS® OSGi JVM server ","name":"cics-java-osgi-ds","url":"https://github.com/cicsdev/cics-java-osgi-ds"},{"description":"Sample Java™ code demonstrating usage of JMS with IBM® MQ in an OSGi JVM server","name":"cics-java-osgi-mq-jms","url":"https://github.com/cicsdev/cics-java-osgi-mq-jms"},{"description":"CICS® Java™ program illustrating usage of helper classes built using the IBM® Record Generator for Java 3.0","name":"cics-java-recgen","url":"https://github.com/cicsdev/cics-java-recgen"},{"description":"Sample client program for CICS® and Kerberos","name":"cics-kerberos-sample","url":"https://github.com/cicsdev/cics-kerberos-sample"},{"description":"Sample module for IBM® SDK for Node.js for z/OS demonstrating interaction with CICS® from UNIX System Services (USS) on z/OS using the external CICS interface (EXCI)","name":"cics-nodejs-exci-module","url":"https://github.com/cicsdev/cics-nodejs-exci-module"},{"description":"Sample application that uses the cics-exci Node.js module to interact with CICS® over the external CICS interface (EXCI)","name":"cics-nodejs-exci-webapp-sample","url":"https://github.com/cicsdev/cics-nodejs-exci-webapp-sample"},{"description":"Sample Node.js application that uses the invoke API from the ibm-cics-api module to call COBOL programs included in the CICS® catalog manager","name":"cics-nodejs-invoke","url":"https://github.com/cicsdev/cics-nodejs-invoke"},{"description":"Example CICS® policy system rule to monitor system health","name":"cics-policy-samples","url":"https://github.com/cicsdev/cics-policy-samples"},{"description":"CICSdev github webpage","name":"cicsdev.github.io","url":"https://github.com/cicsdev/cicsdev.github.io"},{"description":"CICS® Transaction Gateway Request Exit to store monitoring data in a Cloudant Database","name":"cicstg-cloud-monitor","url":"https://github.com/cicsdev/cicstg-cloud-monitor"},{"description":"Programmatically determine the name of a CICSplex","name":"cpsm-cicsplex-name-detector","url":"https://github.com/cicsdev/cpsm-cicsplex-name-detector"},{"description":"Example scripts to enhance the functionality of z/OS Provisioning Toolkit, to show how easy it is to integrate into a wider system","name":"zospt-scripts","url":"https://github.com/cicsdev/zospt-scripts"}]}}}]}}}